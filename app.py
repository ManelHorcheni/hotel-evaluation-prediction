import streamlit as st
import pandas as pd
import joblib
from hotel_star_predictor import HotelStarPredictor

# Charger les mod√®les et l'encodeur
@st.cache_resource
def load_predictor():
    predictor = HotelStarPredictor()
    predictor.model_reg = joblib.load(predictor.model_reg_file)
    predictor.model_cls = joblib.load(predictor.model_cls_file)
    predictor.encoder = joblib.load(predictor.encoder_file)
    predictor.feature_names = joblib.load(predictor.features_file)
    return predictor

predictor = load_predictor()

st.title("‚≠ê Pr√©diction du nombre d'√©toiles et de l'√©valuation d‚Äôun h√¥tel")
#st.write("**Remplissez uniquement les √©quipements disponibles dans l'h√¥tel.**")

# === √âquipements ===
equipements_possible = [
    "Chauffage", "Climatisation", "Coffre fort dans la chambre",
    "Salle de bains avec baignoire", "Salle de bains avec douche",
    "WIFI Gratuit dans les locaux communs", "WIFI Gratuit dans la chambre",
    "Bar", "Restaurant (a la carte)", "Restaurant (Buffet)", "Snack-bar",
    "Restaurant", "Piscine"
]

equipements_selectionnes = {}
for eq in equipements_possible:
    equipements_selectionnes[eq] = st.checkbox(eq, value=False)

# === Construction de l'entr√©e ===
data_input = {}
for eq in equipements_possible:
    data_input[eq] = [1 if equipements_selectionnes[eq] else 0]

df_input = pd.DataFrame(data_input)

# === Pr√©diction ===
if st.button("üîÆ Pr√©dire"):
    try:
        # Colonnes num√©riques uniquement
        cat_cols = []  # Aucun champ cat√©goriel dans ce cas
        num_cols = df_input.select_dtypes(include='number').columns

        X_processed = df_input.copy()

        # Ajouter colonnes manquantes
        for col in predictor.feature_names:
            if col not in X_processed.columns:
                X_processed[col] = 0

        # R√©ordonner
        X_processed = X_processed[predictor.feature_names]

        # Pr√©diction
        pred_reg = predictor.model_reg.predict(X_processed)[0]
        pred_cls = predictor.model_cls.predict(X_processed)[0]

        st.success(f"üìê R√©gression (√©valuations estim√©es) : **{pred_reg:.2f}**")
        st.info(f"üè∑Ô∏è Classification (√©toiles estim√©es) : **{pred_cls} √©toiles**")

    except Exception as e:
        st.error(f"‚ùå Erreur lors de la pr√©diction : {e}")
